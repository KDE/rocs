<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.2-Based Variant V1.1//EN" "dtd/kdex.dtd" [

  <!ENTITY kappname "&rocs;">
  <!ENTITY package "kdeedu">
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % English "INCLUDE"> 
]>
<book lang="&language;">

<bookinfo>
<title>The &rocs; Handbook</title>
<authorgroup>
<author>
<personname>
<firstname>Tomaz</firstname>
<surname>Canabrava</surname>
</personname>
<email>tomaz.canabrava@gmail.com</email>
</author>
<!-- TRANS:ROLES_OF_TRANSLATORS -->
</authorgroup>

<copyright>
<year>2009</year>
<holder>Tomaz Canabrava</holder>
</copyright>
<legalnotice>&FDLNotice;</legalnotice>

<date>2009-11-05</date>
<releaseinfo>1.0</releaseinfo>

<abstract>
<para>
&rocs; is a graph theory tool for KDE.
</para>
</abstract>

<keywordset>
<keyword>KDE</keyword>
<keyword>kdeedu</keyword>
<keyword>mathematics</keyword>
<keyword>math</keyword>
<keyword>graphs</keyword>
<keyword>node</keyword>
<keyword>edge</keyword>
</keywordset>

</bookinfo>

<chapter id="introduction">
<title>Introduction</title>
<para>&rocs; is a Graph Theory IDE for everybody interested in designing and analyzing graph algorithms. This explicitly includes
<itemizedlist>
	<listitem>lecturers who eventually want to demonstrate algorithms to their students,</listitem>
	<listitem>students who want to understand and see how an algorithm works,</listitem>
	<listitem>and everybody who has to design graph algorithms and needs at tool for prototype testing.</listitem>
</itemizedlist>
For all these users, &rocs; provides an easy to use graph editor to set up graphs, a powerful Qt Script scripting engine to execute algorithms, and several helper tools to set up your graphs and data structures for your experiments. So the usual workflow is to write an algorithm, create a graph, and see in real-time how the algorithm works at the the graph.</para>

<screenshot>
<screeninfo>A Screenshot of &rocs;.</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="rocs-screenshot.png" format="PNG" />
</imageobject>
<textobject>
<phrase>A Screenshot of &rocs;.</phrase>
</textobject>
</mediaobject>
</screenshot>
</chapter>

<chapter id="user-interface">
<title>The &rocs; User Interface</title>

<sect1 id="user-interface-all">
<para>
The user interface is divided into several logical parts as presented at the screenshot below.
</para> 
<screenshot>
	<screeninfo>GUI elements of the &rocs; interface.</screeninfo>
	<mediaobject>
	<imageobject>
	<imagedata fileref="rocs-interfaces.png" format="PNG" />
	</imageobject>
	<textobject>
	<phrase>GUI elements of the &rocs; interface.</phrase>
	</textobject>
	</mediaobject>
</screenshot>
<variablelist>
<varlistentry>
	<term>Visual Graph Editor Toolbar</term>
	<listitem><para>to be able to draw or modify graphs at the Visual Graph Editor whiteboard, you first need to select a tool here</para></listitem>
</varlistentry>
<varlistentry>
	<term>Visual Graph Editor</term>
	<listitem><para>This is the area where you can draw your graphs. Right click at the whiteboard, graph elements, or selected graph elements opens a context menu depending on what you click.</para></listitem>
</varlistentry>
<varlistentry>
	<term>Graph Properties</term>
	<listitem><para>This gives a complete list of all different graphs currently at the Visual Graph Editor whiteboard. Here you can modifications to, e.g., the graph name, visible properties like node names or values, or define default colors for the graph elements.</para></listitem>
</varlistentry>
<varlistentry>
	<term>Script Editor</term>
	<listitem><para>In this text editor you can write algorithms in a Qt Script (for our purposes this is essentially the same as JavaScript). You can work on several algorithms at the same time by opening or creating new script tabs at the main menu. The small disk symbol at a tab appears if current changes are unsaved.</para></listitem>
</varlistentry>
<varlistentry>
	<term>Debug &amp; Script Output</term>
	<listitem><para>This text area either writes debug information or the script output of your algorithm, depending on selection of the output setting. If the script throws an error automatically the debug output is selected. Further, the debug output presents all program output messages, too.</para></listitem>
</varlistentry>
<varlistentry>
	<term>Script Execution</term>
	<listitem><para>This menu controls execution of the algorithms. You can execute the script that is currently open at the script editor at the graph at the Visual Graph Editor whiteboard by pressing <guiicon>Start</guiicon>. While the script is executed, it is possible to stop execution by pressing the <guiicon>Stop</guiicon> button.</para></listitem>
</varlistentry>
</variablelist>
</sect1>

<sect1 id="user-interface-toolbars">
<title>Toolbars</title>
<para>There are different possible toolbars for the visual graph editor that allow you to access features by only one click. At the default setting, the following toolbars are shown:</para>
<itemizedlist>
	<listitem>Main Toolbar</listitem>
	<listitem>Alignment Toolbar</listitem>
</itemizedlist>

<sect2 id="user-interface-toolbars-main">
<title>Main Toolbar</title>
<para>The <emphasis>Main Toolbar</emphasis> consists of the following actions. Clicking at an action means that your mouse pointer applies this action at the visual graph editor whiteboard:</para>
<itemizedlist>
<listitem><para>
<guilabel>Move</guilabel>: To select elements, either click at unused space at the whiteboard, keep the mouse pressed and draw a rectangle that contains some nodes and/or edges to select these elements or otherwise directly click at an unselected element to select this element. If you click at a selected element or a set of selected elements, respectively, by keeping the mouse pressed and moving around you can move these elements.</para></listitem>
<listitem><para>
<guilabel>Add Node</guilabel>: Click at an arbitrary position at the visual graph editor whiteboard to create a new node that belongs to the currently selected graph.</para></listitem>
<listitem><para>
<guilabel>Add Edge</guilabel>: Click at one node, keep the mouse pressed and draw a line to another node to which the pointer/edge shall point. This action is only successful if the current graph allows to add this edge (e.g., in an undirected graph you are not allowed to add multiple edges between two nodes).</para></listitem>
<listitem><para>
<guilabel>Delete</guilabel>: Click at an element to delete it. If you delete a node, all adjacent edges are also deleted.</para></listitem>
<listitem><para>
<guilabel>Zoom</guilabel>: Click at the whiteboard, keep the mouse pressed, and by this draw a rectangle. The whiteboard will be zoomed to the selected area.</para></listitem>
</itemizedlist>
<screenshot>
<screeninfo>The Main Toolbar.</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="rocs-toolbar-main.png" format="PNG" />
</imageobject>
<textobject>
<phrase>The Main Toolbar.</phrase>
</textobject>
</mediaobject>
</screenshot>
</sect2>
	
<sect2 id="user-interface-toolbars-alignment">
<title>Alignment Toolbar</title>
<para>You can add the optional <emphasis>Alignment Toolbar</emphasis>. Pressing an action at this toolbar has direct effect to the currently selected nodes:</para>
<itemizedlist>
<listitem><para>
<guilabel>Align on the top</guilabel>: Align the nodes at the vertical position of the top-most node. This only affects the vertical positions.</para></listitem>
<listitem><para>
<guilabel>Align on the center</guilabel>: Align the nodes at the vertical position given by the center of all selected nodes vertical positions. This only affects the vertical positions.</para></listitem>
<listitem><para>
<guilabel>Align on the base</guilabel>: Align the nodes at the vertical position of the bottom-most node. This only affects the vertical positions.</para></listitem>
<listitem><para>
<guilabel>Align on the horizontal center</guilabel>: Align the nodes at the horizontal position of the top-most node. This only affects the horizontal positions.</para></listitem>
<listitem><para>
<guilabel>Align on the right</guilabel>: Align the nodes at the horizontal position of the right-most node. This only affects the horizontal positions.</para></listitem>
<listitem><para>
<guilabel>Align on a circle</guilabel>: Aligns the nodes at a circle of diameter equals to the maximal distance of the nodes. The nodes are positioned in the same sequence as given by view from the center of gravity of these nodes.</para></listitem>
<listitem><para>
<guilabel>Minimize Crossing Edges</guilabel>: Applies the Fruchterman-Reingold algorithm to minimize (approximatively) the number of crossing edges.</para></listitem>
</itemizedlist>
<screenshot>
<screeninfo>The Alignment Toolbar.</screeninfo>
<mediaobject>
<imageobject>
<imagedata fileref="rocs-toolbar-alignment.png" format="PNG" />
</imageobject>
<textobject>
<phrase>The Alignment Toolbar.</phrase>
</textobject>
</mediaobject>
</screenshot>
</sect2>
</sect1>

<sect1 id="user-interface-graph-properties">
	<title>Graph Properties</title>
	<para>
	On the left sidebar you can find the options for each opened graph. All these options are global 
	per graph and can be changed per node and edge with the Node Properties and the Edge Properties dialogs.
	</para>

	<itemizedlist>
	<listitem><para>
	<guilabel>Graph Name</guilabel>: This is the name that your algorithm must use to access the graph.
	</para></listitem>
	<listitem><para>
	<guilabel>Node Color</guilabel> for new created nodes, you can change the node color for all current nodes 
	by clicking the <guilabel>All</guilabel> button
	</para></listitem>
	<listitem><para>
	<guilabel>Edge Color</guilabel>
	</para></listitem>
	</itemizedlist>
	<para>The last row of options consists of toggled buttons:</para>
	<itemizedlist>
	<listitem><para>
	<guilabel>Show names in:</guilabel> <guilabel>Nodes</guilabel> or <guilabel>Edges</guilabel>.
	</para></listitem>
	<listitem><para>
	<guilabel>Show values in:</guilabel> <guilabel>Nodes</guilabel> or <guilabel>Edges</guilabel>.
	</para></listitem>
	<!--listitem><para>
	<guilabel>Graph is oriented</guilabel>
	</para></listitem>
	<listitem><para>
	<guilabel>Graph is Automate</guilabel>
	</para></listitem-->
	</itemizedlist>
</sect1>
</chapter>

<chapter id="using-rocs">
<title>Scripting &rocs;</title>
<para>After the graph is on screen, you can start creating the script for it. The language uses a
Javascript syntax and following are the Graph, Node and Edge objects.</para>

<sect1 id="script-graph">
<title>Graph</title>
<programlisting>
     array list_nodes();
     array list_edges();
     node add_node(name);
     edge add_edge(from, to);
     node node_byname(QString&amp; name);
     node begin_node();
     array end_nodes();
</programlisting> 
<para>Graph variables that can be changed:</para>
<programlisting>
     bool directed
     bool automate
     string name
     string nodeDefaultColor // in HEXA
     string edgeDefaultColor  // in HEXA 
</programlisting>
</sect1>

<sect1 id="script-nodes">
<title>Nodes</title>
<programlisting>
     array adj_nodes();
     array adj_edges();
     array  input_edges();
     array output_edges();
     array loop_edges();
     array connected_edges(Node *n);
     void self_remove();
</programlisting> 
<para>Node Variables:</para>
<programlisting>
    double x
    double y
    double width
    string value
    string name
    string color  // in HEXA
    bool begin
    bool end
</programlisting>
</sect1>

<sect1 id="script-edges">
<title>Edges</title>
<programlisting>
    string color ( em hexa )
    string value
    string name
    double width
    string style ( dot, dash, dash dot, solid )

    node start();
    node  end();

    void self_remove();
</programlisting> 
</sect1>

<sect1 id="script-graph-algorithms">
<title>Graph Algorithms</title>
<programlisting>
    array dijkstra_shortest_path(Node* from, Node* to); // returns edges of shortest path
</programlisting>
</sect1>

<sect1 id="script-example">
<title>Example</title>
<para>Here is a simple script example that sets the color of the 4 first nodes in the first 
graph:</para>
<programlisting>
/* A simple example that sets the color of the 4 first nodes in the first 
graph: */
 
var colours = new Array("red", "green", "blue", "yellow");

/* graphs is an array of graphs, you can access a graph by its index in the 
array or by its name, so if the first graph's name is Untitled0, the following 
sentence are right  */
var list1= graphs[0].list_nodes(); //  1st form.
var list2=Untitled0.list_nodes();              // 2nd form
 
 for ( var i = 0; i &lt; colours.length; i++){
        if (i > list2.length) break;
        list2[i].color = colours[i]
 }
</programlisting>
</sect1>

</chapter>

<chapter id="commands">
<title>Command Reference</title>

<sect1 id="rocs-mainwindow">
<title>Menus and Shortcut Keys</title>

<sect2>
<title>The <guimenu>File</guimenu> Menu</title>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo action="simul">&Ctrl;<keycap>Q</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Quit</guimenuitem>
</menuchoice></term>
<listitem><para><action>Quits</action> &rocs;</para></listitem>
</varlistentry>
</variablelist>

</sect2>


<sect2>
<title>The <guimenu>Settings</guimenu> Menu</title>

<variablelist>
<varlistentry>
<term><menuchoice>
<guimenu>Settings</guimenu>
<guisubmenu>Toolbars Shown</guisubmenu>
</menuchoice></term>
<listitem><para><action>Toggle</action> the <guimenuitem>Main</guimenuitem>, 
and <guimenuitem>Layout</guimenuitem> toolbars.</para></listitem>
</varlistentry>


<varlistentry>
<term><menuchoice>
<guimenu>Settings</guimenu>
<guimenuitem>Show Statusbar</guimenuitem>
</menuchoice></term>
<listitem><para><action>Toggle</action> the statusbar.</para></listitem>
</varlistentry>

<varlistentry>
<term><menuchoice>
<guimenu>Settings</guimenu>
<guimenuitem>Configure Shortcuts...</guimenuitem>
</menuchoice></term>
<listitem><para><action>Open</action> standard &kde; setting dialog that allows you to
choose different shortcut keys for different actions.
</para></listitem>
</varlistentry>

<varlistentry>
<term><menuchoice>
<guimenu>Settings</guimenu>
<guimenuitem>Configure Toolbars...</guimenuitem>
</menuchoice></term>
<listitem><para><action>Configure</action> the items you want to put in the toolbar.
</para></listitem>
</varlistentry>

</variablelist>

</sect2>

<sect2>
<title>The <guimenu>Help</guimenu> Menu</title>
&help.menu.documentation;
</sect2>
</sect1>
</chapter>


<chapter id="credits">

<title>Credits and License</title>

<para>
&rocs;
</para>
<para>
Program copyright 2009 Tomaz Canabrava tcanabrava at kde dot org
</para>

<para>
Documentation copyright 2009 &Anne-Marie.Mahfouf; &Anne-Marie.Mahfouf.mail; and Tomaz Canabrava tcanabrava at kde dot org
</para>

<!-- TRANS:CREDIT_FOR_TRANSLATORS -->
&underFDL;               <!-- FDL: do not remove -->
&underGPL;               <!-- GPL License -->

</chapter>

<appendix id="installation">
<title>Installation</title>

<sect1 id="getting-rocs">
<title>How to obtain &rocs;</title>

&install.intro.documentation;

</sect1>

<sect1 id="compilation">
<title>Compilation and installation</title>

&install.compile.documentation;

</sect1>
</appendix>

&documentation.index;
</book>
<!--
Local Variables:
mode: sgml
sgml-minimize-attributes: nil
sgml-general-insert-case: lower
sgml-indent-step:0
sgml-indent-data:nil
End:
-->
